services:
  gateway:
    build: ./sandol-gateway/gateway
    ports:
      - "8010:80"
    environment:
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      user-service:
        condition: service_healthy
      meal-service:
        condition: service_healthy
      kakao-bot-service:
        condition: service_healthy
      static-info-service:
        condition: service_healthy
    volumes:
      - ./sandol-gateway/gateway:/etc/nginx/conf.d
      - ./sandol-gateway/gateway/lua:/etc/nginx/lua
      - user_static:/usr/share/nginx/static/user
    command: ["/usr/local/openresty/bin/openresty", "-g", "env SECRET_KEY; daemon off;"]
    networks:
      - sandol_network
    restart: on-failure

  user-service:
    container_name: sandol_user_service
    build: ./sandol_user_service
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./sandol_user_service:/app
      - user_static:/app/static
    networks:
      - sandol_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/user/health"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure

  meal-service:
    container_name: sandol_meal_service
    build: ./sandol_meal_service
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./sandol_meal_service:/app
    networks:
      - sandol_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/meal/health"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure

  kakao-bot-service:
    container_name: sandol_kakao_bot_service
    build: ./sandol_kakao_bot_service
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./sandol_kakao_bot_service:/app
    networks:
      - sandol_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/kakao-bot/health"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure

  static-info-service:
    container_name: sandol_static_info_service
    build: ./sandol-static-info-service
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./sandol-static-info-service:/app
    networks:
      - sandol_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/static-info/health"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure

volumes:
  user_static: {}

networks:
  sandol_network:
    driver: bridge
